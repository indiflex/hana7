name: SpringDemo CI/CD
on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v5.0.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: set props
        working-directory: spring/spring-demo
        run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

      - name: grant exe to gradlew
        working-directory: spring/spring-demo
        run: chmod +x gradlew

      - name: build with gradle
        working-directory: spring/spring-demo
        run: ./gradlew clean build -x test

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: setup node pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        working-directory: next/my-app
        run: pnpm install

      - name: set .env
        working-directory: next/my-app
        run: |
          echo "${{ secrets.ENV }}" > .env

      - name: Ensure styled-jsx is installed
        run: pnpm add styled-jsx@latest

      - name: Build with Next.js
        working-directory: next/my-app
        run: pnpm next build

      - name: zip next
        working-directory: next/my-app
        run: zip -rq next.zip .next/standalone .next/static public package.json

      - name: setup ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.WAS }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: scp next to was
        run: |
          scp next/my-app/next.zip ec2-user@${{ secrets.WAS }}:/home/ec2-user/workspace/

      - name: restart next
        run: |
          ssh ec2-user@${{ secrets.WAS }} '
            cd /home/ec2-user/workspace
            rm -rf my-app
            unzip -q next.zip -d my-app 
          '
      - name: scp jar to was
        run: |
          scp spring/spring-demo/build/libs/*.jar ec2-user@${{ secrets.WAS }}:/home/ec2-user/workspace/hana.jar

      - name: restart spring
        run: |
          ssh ec2-user@${{ secrets.WAS }} '
            cd /home/ec2-user/workspace &&
            sudo systemctl restart springboot
          '
