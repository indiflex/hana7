generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  name    String  @db.VarChar(31)
  email   String  @unique(map: "uniq_User_email") @db.VarChar(255)
  image   String? @db.VarChar(255)
  passwd  String? @db.VarChar(256)
  isadmin Boolean @default(false)
  Post    Post[]
}

model Folder {
  id      Int     @id @default(autoincrement()) @db.UnsignedTinyInt
  title   String? @db.VarChar(31)
  readcnt Int     @default(0) @db.SmallInt
  Post    Post[]
}

model Post {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  folder  Int     @db.UnsignedTinyInt
  title   String  @db.VarChar(255)
  writer  Int     @db.UnsignedInt
  content String? @db.Text
  Folder  Folder  @relation(fields: [folder], references: [id], onDelete: Cascade, map: "post_ibfk_1")
  User    User    @relation(fields: [writer], references: [id], onDelete: Cascade, map: "post_ibfk_2")

  @@index([folder], map: "fk_Post_folder")
  @@index([writer], map: "fk_Post_writer_User")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model StopWord {
  value String @db.VarChar(31)

  @@ignore
}
